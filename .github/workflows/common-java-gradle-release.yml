# This is a basic release workflow for Octopus gradle Java modules with publishing to Sonatype Nexus and/or image registry
name: Gradle Release

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        default: '8'
      docker-image:
        description: 'Publishing to docker registry'
        required: false
        type: boolean
        default: false
    secrets:
      OSSRH_USERNAME:
        required: true
      OSSRH_TOKEN:
        required: true
      GPG_PASSPHRASE:
        required: true
      GPG_PRIVATE_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Prod
    permissions:
      packages: write
      contents: write

    steps:
      - name: Build
        uses: octopus-base/common-java-gradle-build@gradle-templates
        with:
          java-version: ${{ inputs.java-version }}
          docker-image: ${{ inputs.docker-image }}
          secrets: inherit

      - run: |
          echo "MAJOR: ${{ steps.version.outputs.group1 }}"
          echo "MINOR: ${{ steps.version.outputs.group2 }}"
          echo "PATCH: ${{ steps.version.outputs.group3 }}"
      - if: ${{ steps.version.outputs.group1 == ''}}
        run: echo "BUILD_VERSION=2.0.0" >> $GITHUB_ENV
      - if: ${{ steps.version.outputs.group2 == ''}}
        run: echo "BUILD_VERSION=${{ steps.version.outputs.group1 }}.0.0" >> $GITHUB_ENV
      - if: ${{ steps.version.outputs.group3 == ''}}
        run: echo "BUILD_VERSION=${{ steps.version.outputs.group1 }}.${{ steps.version.outputs.group2 }}.0" >> $GITHUB_ENV
      - if: ${{ steps.version.outputs.group3 != ''}}
        run: |
          VERSION_PATCH=${{ steps.version.outputs.group3 }}
          echo "BUILD_VERSION=${{ steps.version.outputs.group1 }}.${{ steps.version.outputs.group2 }}.$(($VERSION_PATCH+1))" >> $GITHUB_ENV
        env:
          BUILD_VERSION: ${{ steps.version.outputs.group1 }}.${{ steps.version.outputs.group2 }}.$((${{ steps.version.outputs.group3 }}+1))
      - run: |
          echo "BUILD_VERSION: ${{ env.BUILD_VERSION }}"
          
      - name: Build with Gradle
        run: ./gradlew build dockerBuildImage -x test -Ppublishing.docker.registry=ghcr.io/octopusden -Pdocker.registry=docker.io -Pversion=${{ env.BUILD_VERSION }} --info
        
      - name: Publish to Sonatype Nexus
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -Pversion=${{ env.BUILD_VERSION }}  -s
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
          
      - name: Log in to Docker Registry
        if: ${{ inputs.docker-image }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Push to docker registry
        if: ${{ inputs.docker-image }}
        run: docker push ghcr.io/octopusden/$GITHUB_REPOSITORY:${{ env.BUILD_VERSION }}
        
      - name: Create Release
        # todo: use fixed version instead of master
        uses: marvinpinto/action-automatic-releases@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          automatic_release_tag: v${{ env.BUILD_VERSION }}
