name: Python 2 and 3 build and deploy to PyPI
on: 
  workflow_call:
    inputs:
      process_env:
        required: true
        type: string
      python_versions:
        required: false
        type: string
        default: '3'
    secrets:
      PYPI_API_TOKEN:
        required: true
jobs:
  build-deploy-for-python2:
    if: ${{ contains(inputs.python_versions, '2') == true }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.process_env }}
    permissions:
      id-token: write
    steps:
      - name: Check environment
        run: echo "Environment =  ${{ inputs.process_env }}"
      - name: Check PyPI url
        run: echo "PyPI url=${{ vars.PYPI_REPO_URL }}"
      - name: Check PyPI API TOKEN
        run: echo "PYPI_API_TOKEN=${{ secrets.PYPI_API_TOKEN }}"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install python2
        uses: actions/setup-python@v4
        with:
          python-version: '2.7'
      - name: Install binaries
        run: |
          if test -f required-binaries.txt; then
            sudo apt-get update && sudo apt-get -y install $(cat required-binaries.txt)
          else
            echo "no required binaries"
          fi
      - name: Install setuptools
        run: python2 -m pip install --upgrade pip setuptools wheel
      - name: Setup
        run: python2 setup.py sdist bdist_wheel
      - name: Install and test
        run: python2 -m pip install dist/*.whl && python2 -m unittest discover
      - name: Remove tars
        run: rm -f dist/*.tar.gz
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: false
          repository-url: ${{ vars.PYPI_REPO_URL }}
  build-deploy-for-python3:
    if: ${{ contains(inputs.python_versions, '3') == true }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.process_env }}
    permissions:
      id-token: write
    steps:
      - name: Check environment
        run: echo "Environment =  ${{ inputs.process_env }}"
      - name: Check PyPI url
        run: echo "PyPI url=${{ vars.PYPI_REPO_URL }}"
      - name: Check PyPI API TOKEN
        run: echo "PYPI_API_TOKEN=${{ secrets.PYPI_API_TOKEN }}"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Binaries
        run: |
          if test -f required-binaries.txt; then
            sudo apt-get update && sudo apt-get -y install $(cat required-binaries.txt)
          else
            echo "no required binaries"
          fi
      - name: Install setuptools
        run: python3 -m pip install --upgrade pip setuptools wheel
      - name: Setup
        run: python3 setup.py sdist bdist_wheel
      - name: Install and test
        run: python3 -m pip install dist/*.whl && python3 -m unittest discover
      - name: Remove tars
        run: rm -f dist/*.tar.gz
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: false
          repository-url: ${{ vars.PYPI_REPO_URL }}
