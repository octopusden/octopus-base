# This is a basic build workflow for Octopus gradle Java modules
name: Gradle Compile & UT

on:
  workflow_call:
    inputs:
      flow-type:
        required: true
        type: string # one of { public, hybrid }
      java-version:
        required: true
        type: string
      docker-image:
        required: false
        type: string
        default: ''
      skip-tests:
        required: false
        type: boolean
        default: true
      publish-to-staging:
        required: false
        type: boolean
        default: false
    secrets:
      OSSRH_USERNAME:
        required: true
      OSSRH_TOKEN:
        required: true
      GPG_PASSPHRASE:
        required: true
      GPG_PRIVATE_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Prod
    env:
      SKIP_TESTS: '' # run tests for public flow only
      BUILD_VERSION: 1.0-SNAPSHOT # dummy version which is not really used

    steps:
      - name: Public flow
        if: inputs.flow-type == 'public'
        run: |
          echo "Public flow, run with tests"

      - name: Hybrid flow
        if: inputs.flow-type == 'hybrid' && inputs.skip-tests
        run: |
          echo "Hybrid flow, skip tests"
          echo "SKIP_TESTS=-x test" >> $GITHUB_ENV

      - name: Unknown flow
        if: inputs.flow-type != 'public' && inputs.flow-type != 'hybrid'
        run: |
          echo "Unknown flow specified, should be one of {public, hybrid}: " ${{ inputs.flow-type }}
          exit 1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'adopt'
          cache: 'gradle'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Gradle build and publish to local
        if: inputs.docker-image == ''
        run: ./gradlew build ${{ env.SKIP_TESTS }} -PbuildVersion=${{ env.BUILD_VERSION }} -Pversion=${{ env.BUILD_VERSION }} --info -s

      # publish to nexus staging
      - name: Publish to Sonatype Nexus Staging
        if: inputs.publish-to-staging
        run: ./gradlew -Pnexus=true publishToSonatype -PbuildVersion=${{ env.BUILD_VERSION }} -Pversion=${{ env.BUILD_VERSION }} --info -s
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}

      - name: Gradle build docker image
        if: inputs.docker-image
        run: ./gradlew build dockerBuildImage ${{ env.SKIP_TESTS }} -Poctopus.github.docker.registry=ghcr.io -Pdocker.registry=docker.io -PbuildVersion=${{ env.BUILD_VERSION }} -Pversion=${{ env.BUILD_VERSION }} --info -s
