# This is a basic release workflow for Octopus Java modules with publishing to Sonatype Nexus
name: Maven Release

on:
  workflow_call:
    inputs:
      java-version:
        required: true
        type: string
      increment-version-level:
        description: 'One of: {major, premajor, minor, preminor, patch, prepatch, prerelease}'
        required: false
        type: string
        default: patch
    secrets:
      OSSRH_USERNAME:
        required: true
      OSSRH_TOKEN:
        required: true
      GPG_PASSPHRASE:
        required: true
      GPG_PRIVATE_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Prod

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Get latest tag
        id: tag_version
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          regex: '^v([0-9]+)\..*'

      - name: Prepare new tag version
        uses: actions-ecosystem/action-bump-semver@v1
        id: new-tag-version
        with:
          current_version: ${{ steps.tag_version.outputs.tag }}
          level: ${{ inputs.increment-version-level }}

      - name: Get new version
        uses: octopusden/octopus-base/.github/actions/get-version@v1.0
        id: new-version
        with:
          tag-value: ${{ steps.new-tag-version.outputs.new_version }}
          exit-if-empty: true

      - name: Save new version to env
        run: |
          echo "BUILD_VERSION=${{ steps.new-version.outputs.version }}" >> $GITHUB_ENV

      - name: Set new version for maven
        # todo: use release version instead of master
        uses: qcastel/github-actions-maven-cmd@master
        with:
          maven-args: "org.codehaus.mojo:versions-maven-plugin:2.13.0:set -DnewVersion=${{ env.BUILD_VERSION }}"

      - name: Set up maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # gpg private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for gpg signing in deploy

      - name: Publish to Sonatype Nexus
        run: mvn --batch-mode deploy -P gpg
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Create Release
        # todo: use release version instead of master
        uses: "marvinpinto/action-automatic-releases@master"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "v${{ env.BUILD_VERSION }}"
          files: |
            pom.xml
